[{"/Users/albagustems/Desktop/react-projects/crudredux/src/index.js":"1","/Users/albagustems/Desktop/react-projects/crudredux/src/reportWebVitals.js":"2","/Users/albagustems/Desktop/react-projects/crudredux/src/App.js":"3","/Users/albagustems/Desktop/react-projects/crudredux/src/components/Header.js":"4","/Users/albagustems/Desktop/react-projects/crudredux/src/components/Products.js":"5","/Users/albagustems/Desktop/react-projects/crudredux/src/components/NewProduct.js":"6","/Users/albagustems/Desktop/react-projects/crudredux/src/components/EditProduct.js":"7","/Users/albagustems/Desktop/react-projects/crudredux/src/store.js":"8","/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/index.js":"9","/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/productsReducer.js":"10","/Users/albagustems/Desktop/react-projects/crudredux/src/types/index.js":"11","/Users/albagustems/Desktop/react-projects/crudredux/src/config/axios.js":"12","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/addProductAction.js":"13","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/getProductAction.js":"14","/Users/albagustems/Desktop/react-projects/crudredux/src/components/Product.js":"15","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/deleteProductAction.js":"16","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/editProductAction.js":"17","/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/alertsReducer.js":"18","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/alertsActions.js":"19"},{"size":500,"mtime":1609701263308,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1609701263309,"results":"22","hashOfConfig":"21"},{"size":819,"mtime":1609787334630,"results":"23","hashOfConfig":"21"},{"size":623,"mtime":1609703355512,"results":"24","hashOfConfig":"21"},{"size":1731,"mtime":1609957883153,"results":"25","hashOfConfig":"21"},{"size":3820,"mtime":1610053307990,"results":"26","hashOfConfig":"21"},{"size":2804,"mtime":1609960454851,"results":"27","hashOfConfig":"21"},{"size":466,"mtime":1609787943106,"results":"28","hashOfConfig":"21"},{"size":224,"mtime":1610046807488,"results":"29","hashOfConfig":"21"},{"size":2773,"mtime":1609961244470,"results":"30","hashOfConfig":"21"},{"size":966,"mtime":1610046369562,"results":"31","hashOfConfig":"21"},{"size":131,"mtime":1609875730024,"results":"32","hashOfConfig":"21"},{"size":1165,"mtime":1609943177050,"results":"33","hashOfConfig":"21"},{"size":817,"mtime":1609943139317,"results":"34","hashOfConfig":"21"},{"size":1734,"mtime":1609959248128,"results":"35","hashOfConfig":"21"},{"size":986,"mtime":1609947000495,"results":"36","hashOfConfig":"21"},{"size":1163,"mtime":1609961325412,"results":"37","hashOfConfig":"21"},{"size":504,"mtime":1610053321003,"results":"38","hashOfConfig":"21"},{"size":502,"mtime":1610053172725,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"26403m",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/albagustems/Desktop/react-projects/crudredux/src/index.js",[],["83","84"],"/Users/albagustems/Desktop/react-projects/crudredux/src/reportWebVitals.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/App.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/components/Header.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/components/Products.js",["85"],"import React, {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport {getProductsAction} from '../actions/getProductAction'\nimport Product from './Product'\n\nconst Products = () => {\n    const dispatch = useDispatch()\n    \n    useEffect(()=>{\n        // Check the api for products\n        const loadProducts = () => dispatch (getProductsAction());\n        loadProducts();\n    }, [])\n\n    // Obtain the state\n    const products = useSelector(state => state.products.products)\n    const error = useSelector(state => state.products.error)\n    const loading = useSelector (state => state.products.loading)\n\n    return (\n        <>\n            <h2 className=\"text-center my-5\"> Product Listing</h2>\n            {error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">\n                There was an error. Please try again</p> : null}\n\n            {loading ? <p className=\"text-center\"> Loading... </p>: null}\n            <table className=\"table table-striped\">\n                <thead className=\"bg-primary table-dark\">\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Price</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.length === 0 ? null : (\n                        products.map(product => (\n                            <Product \n                                key={product.id}\n                                product={product}\n                            />\n                        ))\n                    )}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Products\n","/Users/albagustems/Desktop/react-projects/crudredux/src/components/NewProduct.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/components/EditProduct.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/store.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/index.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/productsReducer.js",["86"],"import {\n    ADD_PRODUCT,\n    ADD_PRODUCT_SUCCESS,\n    ADD_PRODUCT_ERROR,\n    GET_PRODUCTS,\n    GET_PRODUCTS_SUCCESS,\n    GET_PRODUCTS_ERROR,\n    DELETE_PRODUCT,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_ERROR,\n    GET_EDIT_PRODUCT,\n    EDIT_PRODUCT,\n    EDIT_PRODUCT_SUCCESS,\n    EDIT_PRODUCT_ERROR\n} from '../types/index'\n\n// Each reducer has it's own state\nconst initialState = {\n    products: [],\n    error: false,\n    loading: false,\n    productErrase: null,\n    productEdit: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_PRODUCT:\n        case GET_PRODUCTS:\n        case EDIT_PRODUCT:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        case ADD_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                products: [\n                    ...state.products,\n                    action.payload\n                ]\n            }\n        case ADD_PRODUCT_ERROR:\n        case GET_PRODUCTS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                products: action.payload\n            }\n        case DELETE_PRODUCT:\n            return {\n                ...state,\n                productErrase: action.payload\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                products: state\n                    .products\n                    .filter(product => product.id !== state.productErrase),\n                error: false,\n                productErrase: null\n            }\n        case DELETE_PRODUCT_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                productErrase: null\n            }\n        case GET_EDIT_PRODUCT:\n            return {\n                ...state,\n                productEdit: action.payload\n            }\n        case EDIT_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                productEdit: null,\n                products: state\n                    .products\n                    .map(product => product.id === action.payload.id\n                        ? product = action.payload\n                        : product)\n            }\n        case EDIT_PRODUCT_ERROR: \n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n                productEdit: null\n            }\n        default:\n            return state\n    }\n}","/Users/albagustems/Desktop/react-projects/crudredux/src/types/index.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/config/axios.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/actions/addProductAction.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/actions/getProductAction.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/components/Product.js",[],"/Users/albagustems/Desktop/react-projects/crudredux/src/actions/deleteProductAction.js",["87"],"import {\n    DELETE_PRODUCT,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_ERROR,\n} from '../types/index'\n\nimport axiosClient from '../config/axios'\nimport Swal from 'sweetalert2'\n\n// Action to select and delete a product to the database\nexport function deleteProductAction (id) {\n    return async (dispatch) => {\n        dispatch(deleteProduct(id))\n\n        try{\n            const dbResult = await axiosClient.delete(`products/${id}`)\n            dispatch (deleteProductSuccess())\n            Swal.fire(\n                'Deleted!',\n                'The product has been errased.',\n                'success'\n            )\n        } catch (error) {\n            dispatch (deleteProductError(true))\n        }\n\n    }\n}\n\n// Functions to dispatch\nconst deleteProduct = id => ({\n    type: DELETE_PRODUCT,\n    payload: id\n})\n\nconst deleteProductSuccess = () => ({\n    type: DELETE_PRODUCT_SUCCESS\n})\n\nconst deleteProductError = state => ({\n    type: DELETE_PRODUCT_ERROR,\n    payload: state\n})","/Users/albagustems/Desktop/react-projects/crudredux/src/actions/editProductAction.js",["88","89"],"import {\n    GET_EDIT_PRODUCT,\n    EDIT_PRODUCT,\n    EDIT_PRODUCT_SUCCESS,\n    EDIT_PRODUCT_ERROR,\n} from '../types/index'\n\nimport axiosClient from '../config/axios'\n\n// Action to select a product and take it to the state\nexport function getEditProductAction(product) {\n    return (dispatch) => {\n        dispatch(getEditProduct(product))\n    }\n}\n\n// Functions to dispatch\nconst getEditProduct = product => ({\n    type: GET_EDIT_PRODUCT,\n    payload: product\n})\n\n// Action to select and edit a product from the database\nexport function editProductAction(product){\n    return async (dispatch) => {\n        dispatch(editProduct(true))\n\n        try {\n            const dbResutl = await axiosClient.put(`/products/${product.id}`, product)\n            dispatch(editProductSuccess(product))\n        } catch (error){\n\n        }\n    }\n}\n\n// Functions to dispatch\nconst editProduct = product => ({\n    type: EDIT_PRODUCT,\n    payload: product\n})\n\nconst editProductSuccess = product => ({\n    type: EDIT_PRODUCT_SUCCESS,\n    payload: product,\n    loading: false,\n    error: false\n})\n\n\nconst editProductError = state => ({\n    type: EDIT_PRODUCT_ERROR,\n    payload: state\n})","/Users/albagustems/Desktop/react-projects/crudredux/src/reducers/alertsReducer.js",["90"],"/Users/albagustems/Desktop/react-projects/crudredux/src/actions/alertsActions.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":8,"nodeType":"97","endLine":14,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":26,"column":1,"nodeType":"101","endLine":104,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":15,"column":19,"nodeType":"104","messageId":"105","endLine":15,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":29,"column":19,"nodeType":"104","messageId":"105","endLine":29,"endColumn":27},{"ruleId":"102","severity":1,"message":"107","line":51,"column":7,"nodeType":"104","messageId":"105","endLine":51,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":8,"column":1,"nodeType":"101","endLine":23,"endColumn":2},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["110"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'dbResult' is assigned a value but never used.","Identifier","unusedVar","'dbResutl' is assigned a value but never used.","'editProductError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},[409,411],"[dispatch]"]